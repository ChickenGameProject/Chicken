#include "game.h"
#include "button.h"
#include "player.h"
#include "ship_level_1.h"
#include <QDebug>
#include <QGraphicsPixmapItem>
//#include "score.h"
#include <QTimer>
#include <QPoint>
#include<QMediaPlayer>
#include <windows.h>

extern Game * game;
extern Player * ship1;
extern int Fire;
Game::Game(QWidget *parent){

    // view
    setHorizontalScrollBarPolicy(Qt::ScrollBarAlwaysOff);
    setVerticalScrollBarPolicy(Qt::ScrollBarAlwaysOff);
    setFixedSize(1375,800);

    // scene
    scene = new QGraphicsScene();
    scene->setSceneRect(0,0,1375,800);
    setScene(scene);

    ship1 = NULL;

    setMouseTracking(true);

    Fire = 1;

}

void Game::displayMenu(){
    // set background for Menu
    game->setBackgroundBrush(QBrush(QImage("E:\\game\\sprites\\back2.png")));

    // creat Button start
    Button *sstart;
    sstart = new Button(":/image/play.png");
    sstart->setPos(game->width()/2 -200 ,game->height()/2 - 120);
    connect(sstart,SIGNAL(clicked()),this,SLOT(start()));
    scene->addItem(sstart);

    // creat Buttom exit
    Button * exit;
    exit = new Button(":/image/exit.png");
    exit->setPos(width()/2 - 200,(height()/2));
    connect(exit,SIGNAL(clicked()),this,SLOT(close()));
    scene->addItem(exit);
}

void Game::mouseMoveEvent(QMouseEvent *event){
    if(ship1){
        QPoint a = event->pos();
        if (a.y()<200){
            ship1->setPos(a.x(),200);
        }else{
        ship1->setPos(a);}
    }


}

void Game::setPlayer(){
    // if player exist
    if (ship1){
        scene->removeItem(ship1);
        delete ship1 ;
    }

    // player does'nt exist
    ship1 = new ship_level_1();
    //
    ship1->setFlag(QGraphicsItem::ItemIsFocusable);
    ship1->setFocus();
    //
    ship1->setPos(width()/2,height()/2);
    scene->addItem(ship1);

}

void Game::decreaseLife(){
    // remove from scene
    scene->removeItem( life[Life::numberOfLife-1]);
    // delete the pointer
    delete life[Life::numberOfLife-1];
    life.pop_back();
    // decrease the static numberOfLife
    Life::numberOfLife--;

   // Life*life_num;
   // int num=Life::numberOfLife;
   // life_num->Write(num);
    if(Life::numberOfLife==0){
        qDebug()<<"in gameover";
        GameOver();
    }

}

void Game::increaseLife(){

    // add pointer to the vector and new
    Life * newlife = new Life();
    life.push_back(newlife);
    Life::numberOfLife++;
    // add to scene
    scene->addItem(life[Life::numberOfLife-1]);
    life[Life::numberOfLife-1]->setPos(life[Life::numberOfLife-2]->x()+20,life[Life::numberOfLife-2]->y());

}

void Game::GameOver(){

    setMouseTracking(false);
    //QMouseEvent *event;
    ship1->setPos(width()/2,height()-100);

    //scene->clear();
    // game->setBackgroundBrush(QBrush(QImage(":/image/gameover.png")));
    // creat Button restart

    restartt = new Button(":/image/restart.png");// a picture for restart
    restartt->setPos(game->width()/2 -198 ,game->height()/2 - 130);
    connect(restartt,SIGNAL(clicked()),this,SLOT(restart()));
    scene->addItem(restartt);

    // creat Buttom exit
    exitt = new Button(":/image/exit.png");//a picture for exit
    exitt->setPos(game->width()/2 - 200,(game->height()/2));
    connect(exitt,SIGNAL(clicked()),this,SLOT(close()));
    scene->addItem(exitt);
}

void Game::start(){

    // clean scene
    scene->clear();

    // music
    QMediaPlayer * music=new QMediaPlayer();
    music->setMedia(QUrl("qrc:/sound/backsound.mp3"));
    music->play();

    // set background of game
    game->setBackgroundBrush(QBrush(QImage(":/image/background.jpg")));

    // set player
    setPlayer();

    // add life
    if (Life::numberOfLife == 0){
        Life::numberOfLife = 3;
    }
    life.resize(Life::numberOfLife);
    qDebug()<<Life::numberOfLife;

    for (int i=0;i<Life::numberOfLife;i++){
        life[i] = new Life();
        scene->addItem(life[i]);
        life[i]->setPos(i*20,0);
    }

    // add score
    score = new Score();
    scene->addItem(score);
    score->setPos(width()-250,0);

    // add bomb every 4 second
    QTimer * timer = new QTimer();
    QObject::connect(timer,SIGNAL(timeout()),ship1,SLOT(spawn()));
    if (level->getlevel()==2){
        timer->start(3000);}
    else if(level->getlevel()==3){
        timer->start(2500);
    }
    else if(level->getlevel()==4){
        timer->start(1000);
    }
    else if (level->getlevel() == 5 ){
        timer->start(1000);
    }
    else{
        timer->start(4000);
    }

    // add level
    level = new Level();
    scene->addItem(level);
    level->setPos(width()-250,30);

    // add chicken
    //mehrnaz chicken_level_1
     QTimer * timer3 = new QTimer();
     QObject::connect(timer3,SIGNAL(timeout()),ship1,SLOT(spawn2()));
     timer3->start(2000);
}

void Game::restart(){

    scene->removeItem(ship1);
    for (int i=0;i<life.size();i++){

        scene->removeItem(life[i]);
        //delete  life[i];
        //life.pop_back();
    }
    scene->removeItem(level);
    scene->removeItem(score);

    start();
}
